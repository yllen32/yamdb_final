name: yamdb_workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v3
    - name: set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.7'
    - name: install depencs
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt
      working-directory: ./api_yamdb
    - name: pep8 check
      run: python -m flake8
    - name: pytest
      run: pytest

  prepare_Dockerfile:
    runs-on: ubuntu-22.04
    needs: tests
    steps:
    - name: Check the repo
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: set up docker buildx
      uses: docker/setup-buildx-action@v2
    - name: login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_LOGIN }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: ./api_yamdb
        push: true
        tags: yllen32/api_yambd:latest
  
  deploy:
    runs-on: ubuntu-22.04
    needs: prepare_Dockerfile
    steps:
      - name: connect to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd infra/
            echo SECRET_KEY=${{ secrets.SECRET_KEY}} > .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE}} > .env
            echo DB_NAME=${{ secrets.DB_NAME}} > .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER}} > .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD}} > .env
            echo DB_HOST=${{ secrets.DB_HOST}} > .env
            echo DB_PORT=${{ secrets.DB_PORT}} > .env
            sudo docker-compose up -d --build
  
  send_message:
    runs-on: ubuntu-22.04
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.ADMIN_ID }}
        token: ${{ secrets.BOT_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен! 